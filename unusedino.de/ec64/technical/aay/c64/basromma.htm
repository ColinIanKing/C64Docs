<html><head><title>All_About_Your_64-Online-Help Version 0.64</title></head>
<body bgcolor="#a098ff" text="#000000" link="#ffffff" alink="#ffffff" vlink="#404040"><center><table><tr><td><pre>

  +------------------------------------------------------------------------
  |
  |      BASIC ROM LISTING
  |
  +------------------------------------------------------------------------
  |
  | BASIC related topics:
  |
  |   <a href="chrstabu.htm">CHR$/ASC-Table for Upper Case/Graphics</a>
  |   <a href="chrstabl.htm">CHR$/ASC-Table for Lower Case/Upper Case</a>
  |
  |
  |   <a href="roma000.htm">$A000/40960</a>      Restart Vectors
  |   <a href="roma004.htm">$A004/40964</a>      'CBMBASIC'-Identifier
  |   <a href="roma00c.htm">$A00C/40972</a>      BASIC Command Vectors - 1
  |   <a href="roma052.htm">$A052/41042</a>      BASIC Function Vectors
  |   <a href="roma080.htm">$A080/41088</a>      BASIC Operator Vectors
  |   <a href="roma09e.htm">$A09E/41118</a>      BASIC Command Keyword Table
  |   <a href="roma129.htm">$A129/41257</a>      BASIC Misc. Keyword Table
  |   <a href="roma140.htm">$A140/41280</a>      BASIC Operator Keyword Table
  |   <a href="roma14d.htm">$A14D/41293</a>      BASIC Function Keyword Table
  |   <a href="roma19e.htm">$A19E/41374</a>      Error Message Table
  |   <a href="roma328.htm">$A328/41768</a>      Error Message Pointers
  |   <a href="roma364.htm">$A364/41828</a>      Misc. Messages
  |   <a href="roma38a.htm">$A38A/41866</a>      Find FOR/GOSUB Entry on Stack
  |   <a href="roma3b8.htm">$A3B8/41912</a>      Open Space in Memory
  |   <a href="roma3fb.htm">$A3FB/41979</a>      Check Stack Depth
  |   <a href="roma408.htm">$A408/41992</a>      Check Memory Overlap
  |   <a href="roma435.htm">$A435/42037</a>      Output ?OUT OF MEMORY Error
  |   <a href="roma437.htm">$A437/42039</a>      Error Routine
  |   <a href="roma469.htm">$A469/42089</a>      Break Entry
  |   <a href="roma474.htm">$A474/42100</a>      Restart BASIC
  |   <a href="roma480.htm">$A480/42112</a>      Input &amp; Identify BASIC Line
  |   <a href="roma49c.htm">$A49C/42140</a>      Get Line Number &amp; Tokenise Text
  |   <a href="roma4a2.htm">$A4A2/42146</a>      Insert BASIC Text
  |   <a href="roma533.htm">$A533/42291</a>      Rechain Lines
  |   <a href="roma560.htm">$A560/42336</a>      Input Line Into Buffer
  |   <a href="roma579.htm">$A579/42361</a>      Tokenise Input Buffer
  |   <a href="roma613.htm">$A613/42515</a>      Search for Line Number
  |   <a href="roma642.htm">$A642/42562</a>      Perform [new]
  |   <a href="roma65e.htm">$A65E/42590</a>      Perform [clr]
  |   <a href="roma68e.htm">$A68E/42638</a>      Reset TXTPTR
  |   <a href="roma69c.htm">$A69C/42652</a>      Perform [list]
  |   <a href="roma717.htm">$A717/42775</a>      Handle LIST Character
  |   <a href="roma742.htm">$A742/42818</a>      Perform [for]
  |   <a href="roma7ae.htm">$A7AE/42926</a>      BASIC Warm Start
  |   <a href="roma7c4.htm">$A7C4/42948</a>      Check End of Program
  |   <a href="roma7e1.htm">$A7E1/42977</a>      Prepare to execute statement
  |   <a href="roma7ed.htm">$A7ED/42989</a>      Perform BASIC Keyword
  |   <a href="roma81d.htm">$A81D/43037</a>      Perform [restore]
  |   <a href="roma82c.htm">$A82C/43052</a>      Perform [stop]
  |   <a href="roma82f.htm">$A82F/43055</a>      Perform [end]
  |   <a href="roma831.htm">$A831/43057</a>      Perform Break
  |   <a href="roma857.htm">$A857/43095</a>      Perform [cont]
  |   <a href="roma871.htm">$A871/43121</a>      Perform [run]
  |   <a href="roma883.htm">$A883/43139</a>      Perform [gosub]
  |   <a href="roma8a0.htm">$A8A0/43168</a>      Perform [goto]
  |   <a href="roma8d2.htm">$A8D2/43218</a>      Perform [return]
  |   <a href="roma8f8.htm">$A8F8/43256</a>      Perform [data]
  |   <a href="roma906.htm">$A906/43270</a>      Search for Next Statement / Line
  |   <a href="roma928.htm">$A928/43304</a>      Perform [if]
  |   <a href="roma93b.htm">$A93B/43323</a>      Perform [rem]
  |   <a href="roma94b.htm">$A94B/43339</a>      Perform [on]
  |   <a href="roma96b.htm">$A96B/43371</a>      Fetch linnum From BASIC
  |   <a href="roma9a5.htm">$A9A5/43429</a>      Perform [let]
  |   <a href="roma9c4.htm">$A9C4/43460</a>      Assign Integer
  |   <a href="roma9d6.htm">$A9D6/43478</a>      Assign Floating Point
  |   <a href="roma9d9.htm">$A9D9/43481</a>      Assign String
  |   <a href="roma9e3.htm">$A9E3/43491</a>      Assign TI$
  |   <a href="romaa2c.htm">$AA2C/43564</a>      Add Digit to FAC#1
  |   <a href="romaa80.htm">$AA80/43648</a>      Perform [print#]
  |   <a href="romaa86.htm">$AA86/43654</a>      Perform [cmd]
  |   <a href="romaa9a.htm">$AA9A/43674</a>      Print String From Memory
  |   <a href="romaaa0.htm">$AAA0/43680</a>      Perform [print]
  |   <a href="romaab8.htm">$AAB8/43704</a>      Output Variable
  |   <a href="romaaca.htm">$AACA/43722</a>      -Add zero terminator to string
  |   <a href="romaad7.htm">$AAD7/43735</a>      Output CR/LF
  |   <a href="romaae8.htm">$AAE8/43752</a>      Handle comma, TAB(, SPC(
  |   <a href="romab1e.htm">$AB1E/43806</a>      Output String
  |   <a href="romab3b.htm">$AB3B/43835</a>      Output Format Character
  |   <a href="romab4d.htm">$AB4D/43853</a>      Handle Bad Data
  |   <a href="romab7b.htm">$AB7B/43899</a>      Perform [get]
  |   <a href="romaba5.htm">$ABA5/43941</a>      Perform [input#]
  |   <a href="romabbf.htm">$ABBF/43967</a>      Perform [input]
  |   <a href="romabea.htm">$ABEA/44010</a>      Read Input Buffer
  |   <a href="romabf9.htm">$ABF9/44025</a>      Do Input Prompt
  |   <a href="romac06.htm">$AC06/44038</a>      Perform [read]
  |   <a href="romac35.htm">$AC35/44085</a>      General Purpose Read Routine
  |   <a href="romacfc.htm">$ACFC/44284</a>      Input Error Messages
  |   <a href="romad1e.htm">$AD1E/44318</a>      Perform [next]
  |   <a href="romad61.htm">$AD61/44385</a>      Check Valid Loop
  |   <a href="romad8a.htm">$AD8A/44426</a>      Confirm Result
  |   <a href="romad9e.htm">$AD9E/44446</a>      Evaluate Expression in Text
  |   <a href="romae83.htm">$AE83/44675</a>      Evaluate Single Term
  |   <a href="romaea8.htm">$AEA8/44712</a>      Constant - pi
  |   <a href="romaead.htm">$AEAD/44717</a>      Continue Expression
  |   <a href="romaef1.htm">$AEF1/44785</a>      Expression in Brackets
  |   <a href="romaef7.htm">$AEF7/44791</a>      Test ')'
  |   <a href="romaefa.htm">$AEFA/44794</a>      Test '('
  |   <a href="romaefd.htm">$AEFD/44797</a>      Test ','
  |   <a href="romaf08.htm">$AF08/44808</a>      Output ?SYNTAX Error
  |   <a href="romaf0d.htm">$AF0D/44813</a>      Set up NOT Function
  |   <a href="romaf14.htm">$AF14/44820</a>      Identify Reserved Variable
  |   <a href="romaf28.htm">$AF28/44840</a>      Search for Variable
  |   <a href="romaf48.htm">$AF48/44872</a>      Convert TI to ASCII String
  |   <a href="romafa7.htm">$AFA7/44967</a>      Identify Function Type
  |   <a href="romafb1.htm">$AFB1/44977</a>      Evaluate String Function
  |   <a href="romafd1.htm">$AFD1/45009</a>      Evaluate Numeric Function
  |   <a href="romafe6.htm">$AFE6/45030</a>      Perform [or], [and]
  |   <a href="romb016.htm">$B016/45078</a>      Perform &lt;, =, &gt;
  |   <a href="romb01b.htm">$B01B/45083</a>      Numeric Comparison
  |   <a href="romb02e.htm">$B02E/45102</a>      String Comparison
  |   <a href="romb07e.htm">$B07E/45182</a>      Perform [dim]
  |   <a href="romb08b.htm">$B08B/45195</a>      Identify Variable
  |   <a href="romb0e7.htm">$B0E7/45287</a>      Locate Ordinary Variable
  |   <a href="romb113.htm">$B113/45331</a>      Does A hold an alphabetic character?
  |   <a href="romb11d.htm">$B11D/45341</a>      Create New Variable
  |   <a href="romb128.htm">$B128/45352</a>      Create Variable
  |   <a href="romb194.htm">$B194/45460</a>      Allocate Array Pointer Space
  |   <a href="romb1a5.htm">$B1A5/45477</a>      Constant 32768 in Flpt
  |   <a href="romb1aa.htm">$B1AA/45482</a>      FAC#1 to Integer in A/Y
  |   <a href="romb1b2.htm">$B1B2/45490</a>      Evaluate Text for Integer
  |   <a href="romb1bf.htm">$B1BF/45503</a>      FAC#1 to Positive Integer
  |   <a href="romb1d1.htm">$B1D1/45521</a>      Get Array Parameters
  |   <a href="romb218.htm">$B218/45592</a>      Find Array
  |   <a href="romb245.htm">$B245/45637</a>      ?BAD SUBSCRIPT
  |   <a href="romb248.htm">$B248/45640</a>      ?ILLEGAL QUANTITY
  |   <a href="romb24d.htm">$B24D/45645</a>      ?REDIM'D ARRAY
  |   <a href="romb261.htm">$B261/45665</a>      Create Array
  |   <a href="romb30e.htm">$B30E/45838</a>      Locate Element in Array
  |   <a href="romb34c.htm">$B34C/45900</a>      Number of Bytes in Subscript
  |   <a href="romb37d.htm">$B37D/45949</a>      Evaluate &lt;fre&gt;
  |   <a href="romb391.htm">$B391/45969</a>      Convert Integer in (AC/YR) to Flpt
  |   <a href="romb39e.htm">$B39E/45982</a>      Evaluate &lt;pos&gt;
  |   <a href="romb3a6.htm">$B3A6/45990</a>      Confirm Program Mode
  |   <a href="romb3ae.htm">$B3AE/45998</a>      ?UNDEF'D FUNCTION
  |   <a href="romb3b3.htm">$B3B3/46003</a>      Perform [def fn]
  |   <a href="romb3e1.htm">$B3E1/46049</a>      Check Syntax of FN
  |   <a href="romb3f4.htm">$B3F4/46068</a>      Perform [fn]
  |   <a href="romb465.htm">$B465/46181</a>      Evaluate &lt;str$&gt;
  |   <a href="romb487.htm">$B487/46215</a>      Set Up String
  |   <a href="romb4d5.htm">$B4D5/46293</a>      Save String Descriptor
  |   <a href="romb4f4.htm">$B4F4/46324</a>      Allocate Space for String
  |   <a href="romb526.htm">$B526/46374</a>      Garbage Collection
  |   <a href="romb5bd.htm">$B5BD/46525</a>      Search for Next String
  |   <a href="romb606.htm">$B606/46598</a>      Collect a String
  |   <a href="romb63d.htm">$B63D/46653</a>      Concatenate Two Strings
  |   <a href="romb67a.htm">$B67A/46714</a>      Store String in High RAM
  |   <a href="romb6a3.htm">$B6A3/46755</a>      Perform String Housekeeping
  |   <a href="romb6db.htm">$B6DB/46811</a>      Clean Descriptor Stack
  |   <a href="romb6ec.htm">$B6EC/46828</a>      Evaluate &lt;chr$&gt;
  |   <a href="romb700.htm">$B700/46848</a>      Evaluate &lt;left$&gt;
  |   <a href="romb72c.htm">$B72C/46892</a>      Evaluate &lt;right$&gt;
  |   <a href="romb737.htm">$B737/46903</a>      Evaluate &lt;mid$&gt;
  |   <a href="romb761.htm">$B761/46945</a>      Pull String Parameters
  |   <a href="romb77c.htm">$B77C/46972</a>      Evaluate &lt;len&gt;
  |   <a href="romb782.htm">$B782/46978</a>      Exit String Mode
  |   <a href="romb78b.htm">$B78B/46987</a>      Evaluate &lt;asc&gt;
  |   <a href="romb79b.htm">$B79B/47003</a>      Evaluate Text to 1 Byte in XR
  |   <a href="romb7ad.htm">$B7AD/47021</a>      Evaluate &lt;val&gt;
  |   <a href="romb7b5.htm">$B7B5/47029</a>      Convert ASCII String to Flpt
  |   <a href="romb7eb.htm">$B7EB/47083</a>      Get parameters for POKE/WAIT
  |   <a href="romb7f7.htm">$B7F7/47095</a>      Convert FAC#1 to Integer in LINNUM
  |   <a href="romb80d.htm">$B80D/47117</a>      Evaluate &lt;peek&gt;
  |   <a href="romb824.htm">$B824/47140</a>      Perform [poke]
  |   <a href="romb82d.htm">$B82D/47149</a>      Perform [wait]
  |   <a href="romb849.htm">$B849/47177</a>      Add 0.5 to FAC#1
  |   <a href="romb850.htm">$B850/47184</a>      Perform Subtraction
  |   <a href="romb862.htm">$B862/47202</a>      Normalise Addition
  |   <a href="romb867.htm">$B867/47207</a>      Perform Addition
  |   <a href="romb947.htm">$B947/47431</a>      2's Complement FAC#1
  |   <a href="romb97e.htm">$B97E/47486</a>      Output ?OVERFLOW Error
  |   <a href="romb983.htm">$B983/47491</a>      Multiply by Zero Byte
  |   <a href="romb9bc.htm">$B9BC/47548</a>      Table of Flpt Constants  1.00
  |   <a href="romb9c1.htm">$B9C1/47553</a>      Table of Flpt Constants  #03
  |   <a href="romb9c2.htm">$B9C2/47554</a>      Table of Flpt Constants  0.434255942
  |   <a href="romb9c7.htm">$B9C7/47559</a>      Table of Flpt Constants  0.57658454
  |   <a href="romb9cc.htm">$B9CC/47564</a>      Table of Flpt Constants  0.961800759
  |   <a href="romb9d1.htm">$B9D1/47569</a>      Table of Flpt Constants  2.885390073
  |   <a href="romb9d6.htm">$B9D6/47574</a>      Table of Flpt Constants  0.707106781
  |   <a href="romb9db.htm">$B9DB/47579</a>      Table of Flpt Constants  1.41421356
  |   <a href="romb9e0.htm">$B9E0/47584</a>      Table of Flpt Constants  -0.5
  |   <a href="romb9e5.htm">$B9E5/47589</a>      Table of Flpt Constants  0.693147181
  |   <a href="romb9ea.htm">$B9EA/47594</a>      Evaluate &lt;log&gt;
  |   <a href="romba28.htm">$BA28/47656</a>      Perform Multiply
  |   <a href="romba59.htm">$BA59/47705</a>      Multiply by a Byte
  |   <a href="romba8c.htm">$BA8C/47756</a>      Load FAC#2 From Memory
  |   <a href="rombab7.htm">$BAB7/47799</a>      Test Both Accumulators
  |   <a href="rombad4.htm">$BAD4/47828</a>      Overflow / Underflow
  |   <a href="rombae2.htm">$BAE2/47842</a>      Multiply FAC#1 by 10
  |   <a href="rombaf9.htm">$BAF9/47865</a>      Constant 10 in Flpt
  |   <a href="rombafe.htm">$BAFE/47870</a>      Divide FAC#1 by 10
  |   <a href="rombb07.htm">$BB07/47879</a>      Divide FAC#2 by Flpt at (AC/YR)
  |   <a href="rombb0f.htm">$BB0F/47887</a>      Divide FAC#2 by FAC#1
  |   <a href="rombba2.htm">$BBA2/48034</a>      Load FAC#1 From Memory
  |   <a href="rombbc7.htm">$BBC7/48071</a>      Store FAC#1 in Memory
  |   <a href="rombbfc.htm">$BBFC/48124</a>      Copy FAC#2 into FAC#1
  |   <a href="rombc0c.htm">$BC0C/48140</a>      Copy FAC#1 into FAC#2
  |   <a href="rombc1b.htm">$BC1B/48155</a>      Round FAC#1
  |   <a href="rombc2b.htm">$BC2B/48171</a>      Check Sign of FAC#1
  |   <a href="rombc39.htm">$BC39/48185</a>      Evaluate &lt;sgn&gt;
  |   <a href="rombc58.htm">$BC58/48216</a>      Evaluate &lt;abs&gt;
  |   <a href="rombc5b.htm">$BC5B/48219</a>      Compare FAC#1 With Memory
  |   <a href="rombc9b.htm">$BC9B/48283</a>      Convert FAC#1 to Integer
  |   <a href="rombccc.htm">$BCCC/48332</a>      Evaluate &lt;int&gt;
  |   <a href="rombcf3.htm">$BCF3/48371</a>      Convert ASCII String to a Number in FAC
  |   <a href="rombdb3.htm">$BDB3/48563</a>      String Conversion Constants    99999999
  |   <a href="rombdb8.htm">$BDB8/48568</a>      String Conversion Constants   999999999
  |   <a href="rombdbd.htm">$BDBD/48573</a>      String Conversion Constants  1000000000
  |   <a href="rombdc2.htm">$BDC2/48578</a>      Output 'IN' and Line Number
  |   <a href="rombdcd.htm">$BDCD/48589</a>      Output Positive Integer in A/X
  |   <a href="rombddd.htm">$BDDD/48605</a>      Convert FAC#1 to ASCII String
  |   <a href="rombe68.htm">$BE68/48744</a>      Convert TI to String
  |   <a href="rombf11.htm">$BF11/48913</a>      Table of Constants  0.5
  |   <a href="rombf16.htm">$BF16/48918</a>      Table of Constants  4-byte powers of 10
  |   <a href="rombf3a.htm">$BF3A/48954</a>      Table of Constants  TI Constants
  |   <a href="rombf71.htm">$BF71/49009</a>      Evaluate &lt;sqr&gt;
  |   <a href="rombf7b.htm">$BF7B/49019</a>      Evaluate &lt;power&gt;
  |   <a href="rombfb4.htm">$BFB4/49076</a>      Negate FAC#1
  |   <a href="rombfbf.htm">$BFBF/49087</a>      Table of Constants  1.44269504
  |   <a href="rombfc4.htm">$BFC4/49092</a>      Table of Constants  #07
  |   <a href="rombfc5.htm">$BFC5/49093</a>      Table of Constants  2.149875 E-5
  |   <a href="rombfca.htm">$BFCA/49098</a>      Table of Constants  1.435231 E-4
  |   <a href="rombfcf.htm">$BFCF/49103</a>      Table of Constants  1.342263 E-3
  |   <a href="rombfd4.htm">$BFD4/49108</a>      Table of Constants  9.6414017 E-3
  |   <a href="rombfd9.htm">$BFD9/49113</a>      Table of Constants  5.550513 E-2
  |   <a href="rombfde.htm">$BFDE/49118</a>      Table of Constants  2.402263 E-4
  |   <a href="rombfe3.htm">$BFE3/49123</a>      Table of Constants  6.931471 E-1
  |   <a href="rombfe8.htm">$BFE8/49128</a>      Table of Constants  1.00
  |   <a href="rombfed.htm">$BFED/49133</a>      Evaluate &lt;exp&gt;
  |
  +------------------------------------------------------------------------

   <a href="index.htm">Back to Mainpage</a>

</pre></td></tr></table></center></body></html>
