<html><head><title>All_About_Your_1541-Online-Help Version 0.23</title></head>
<body bgcolor="#a098ff" text="#000000" link="#ffffff" alink="#ffffff" vlink="#404040"><center><table><tr><td><pre>

  +------------------------------------------------------------------------
  |
  |      DISK-DRIVE 1541: ROM-LISTING
  |
  +------------------------------------------------------------------------
  |
  | ROM-Comments were done by Frank Kontros, used with permission.
  |
  |
  | File Manager Routines:
  |
  |   <a href="ro41c100.htm">$C100/49408</a>      Turn LED on for current drive
  |   <a href="ro41c118.htm">$C118/49432</a>      Turn LED on
  |   <a href="ro41c123.htm">$C123/49443</a>      Clear error flags
  |   <a href="ro41c12c.htm">$C12C/49452</a>      Prepare for LED flash after error
  |   <a href="ro41c146.htm">$C146/49478</a>      Interpret command from computer
  |   <a href="ro41c194.htm">$C194/49556</a>      Prepare error msg after executing command
  |   <a href="ro41c1bd.htm">$C1BD/49597</a>      Erase input buffer
  |   <a href="ro41c1c8.htm">$C1C8/49608</a>      Output error msg (track and sector 0)
  |   <a href="ro41c1d1.htm">$C1D1/49617</a>      Check input line
  |   <a href="ro41c1e5.htm">$C1E5/49637</a>      Check ':' on input line
  |   <a href="ro41c1ee.htm">$C1EE/49646</a>      Check input line
  |   <a href="ro41c268.htm">$C268/49768</a>      Search character in input buffer
  |   <a href="ro41c2b3.htm">$C2B3/49843</a>      Check line length
  |   <a href="ro41c2dc.htm">$C2DC/49884</a>      Clear flags for command input
  |   <a href="ro41c312.htm">$C312/49938</a>      Preserve drive number
  |   <a href="ro41c33c.htm">$C33C/49980</a>      Search for drive number
  |   <a href="ro41c368.htm">$C368/50024</a>      Get drive number
  |   <a href="ro41c38f.htm">$C38F/50063</a>      Reverse drive number
  |   <a href="ro41c398.htm">$C398/50072</a>      Check given file type
  |   <a href="ro41c3bd.htm">$C3BD/50109</a>      Check given drive number
  |   <a href="ro41c3ca.htm">$C3CA/50122</a>      Verify drive number
  |   <a href="ro41c440.htm">$C440/50240</a>      Flags for drive check
  |   <a href="ro41c44f.htm">$C44F/50255</a>      Search for file in directory
  |   <a href="ro41c48b.htm">$C48B/50315</a>      ?
  |   <a href="ro41c4d8.htm">$C4D8/50392</a>      ?
  |   <a href="ro41c5ac.htm">$C5AC/50604</a>      ?
  |   <a href="ro41c63d.htm">$C63D/50749</a>      Test and initalise drive
  |   <a href="ro41c66e.htm">$C66E/50798</a>      Name of file in directory buffer
  |   <a href="ro41c688.htm">$C688/50824</a>      Copy filename to work buffer
  |   <a href="ro41c6a6.htm">$C6A6/50854</a>      Search for end of name in command
  |   <a href="ro41c6ce.htm">$C6CE/50894</a>      ?
  |   <a href="ro41c6de.htm">$C6DE/50910</a>      ?
  |   <a href="ro41c7ac.htm">$C7AC/51116</a>      Clear Directory Output Buffer
  |   <a href="ro41c7b7.htm">$C7B7/51127</a>      Create header with disk name
  |   <a href="ro41c806.htm">$C806/51206</a>      Print 'blocks free.'
  |   <a href="ro41c817.htm">$C817/51223</a>      'Blocks free.'
  |   <a href="ro41c823.htm">$C823/51235</a>      Perform [S] - Scratch command
  |   <a href="ro41c87d.htm">$C87D/51325</a>      Erase file
  |   <a href="ro41c8b6.htm">$C8B6/51382</a>      Erase dir entry
  |   <a href="ro41c8c1.htm">$C8C1/51393</a>      Perform [D] - Backup command (Unused)
  |   <a href="ro41c8c6.htm">$C8C6/51398</a>      Format disk
  |   <a href="ro41c8f0.htm">$C8F0/51440</a>      Perform [C] - Copy command
  |   <a href="ro41c9a1.htm">$C9A1/51617</a>      ?
  |   <a href="ro41c9a7.htm">$C9A7/51623</a>      ?
  |   <a href="ro41c9d5.htm">$C9D5/51669</a>      ?
  |   <a href="ro41c9fa.htm">$C9FA/51706</a>      ?
  |   <a href="ro41ca35.htm">$CA35/51765</a>      ?
  |   <a href="ro41ca88.htm">$CA88/51848</a>      Perform [R] - Rename command
  |   <a href="ro41cacc.htm">$CACC/51916</a>      Check if file present
  |   <a href="ro41caf8.htm">$CAF8/51960</a>      Perform [M] - Memory command
  |   <a href="ro41cb20.htm">$CB20/52000</a>      M-R memory read
  |   <a href="ro41cb50.htm">$CB50/52048</a>      M-W memory write
  |   <a href="ro41cb5c.htm">$CB5C/52060</a>      Perform [U] - User command
  |   <a href="ro41cb84.htm">$CB84/52100</a>      Open direct access channel, number
  |   <a href="ro41cc1b.htm">$CC1B/52251</a>      Perform [B] - Block/Buffer command
  |   <a href="ro41cc5d.htm">$CC5D/52317</a>      Block commands &quot;AFRWEP&quot;
  |   <a href="ro41cc63.htm">$CC63/52323</a>      Block command vectors
  |   <a href="ro41cc6f.htm">$CC6F/52335</a>      Get parameters form block commands
  |   <a href="ro41ccf2.htm">$CCF2/52466</a>      Decimal values  1, 10, 100
  |   <a href="ro41ccf5.htm">$CCF5/52469</a>      B-F block free
  |   <a href="ro41ccfe.htm">$CCFE/52478</a>      ?
  |   <a href="ro41cd03.htm">$CD03/52483</a>      B-A block allocate
  |   <a href="ro41cd36.htm">$CD36/52534</a>      Read block to buffer
  |   <a href="ro41cd3c.htm">$CD3C/52540</a>      Get byte from buffer
  |   <a href="ro41cd42.htm">$CD42/52546</a>      Read block from disk
  |   <a href="ro41cd56.htm">$CD56/52566</a>      B-R block read
  |   <a href="ro41cd5f.htm">$CD5F/52575</a>      U1, Block read without changing buffer pointer
  |   <a href="ro41cd73.htm">$CD73/52595</a>      B-W block write
  |   <a href="ro41cd97.htm">$CD97/52631</a>      U2, Block write without changing buffer pointer
  |   <a href="ro41cda3.htm">$CDA3/52643</a>      B-E block execute
  |   <a href="ro41cdbd.htm">$CDBD/52669</a>      B-P block pointer
  |   <a href="ro41cdd2.htm">$CDD2/52690</a>      Open channel
  |   <a href="ro41cdf2.htm">$CDF2/52722</a>      Check buffer number and open channel
  |   <a href="ro41ce0e.htm">$CE0E/52750</a>      Set pointer for REL file
  |   <a href="ro41ce2c.htm">$CE2C/52780</a>      ?
  |   <a href="ro41ce6e.htm">$CE6E/52846</a>      Divide by 254
  |   <a href="ro41ce71.htm">$CE71/52849</a>      Divide by 120
  |   <a href="ro41ced9.htm">$CED9/52953</a>      Erase work storage
  |   <a href="ro41cee2.htm">$CEE2/52962</a>      Left shift 3-byte register twice
  |   <a href="ro41cee5.htm">$CEE5/52965</a>      Left shift 3-byte register once
  |   <a href="ro41ceed.htm">$CEED/52973</a>      Add 3-byte registers
  |   <a href="ro41cefa.htm">$CEFA/52986</a>      ?
  |   <a href="ro41cf09.htm">$CF09/53001</a>      ?
  |   <a href="ro41cf1e.htm">$CF1E/53022</a>      ?
  |   <a href="ro41cf8c.htm">$CF8C/53132</a>      Change buffer
  |   <a href="ro41cf9b.htm">$CF9B/53147</a>      Write data in buffer
  |   <a href="ro41cff1.htm">$CFF1/53233</a>      Write data byte in buffer
  |   <a href="ro41d005.htm">$D005/53253</a>      Perform [I] - Initalise command
  |   <a href="ro41d00e.htm">$D00E/53262</a>      Read BAM from disk
  |   <a href="ro41d042.htm">$D042/53314</a>      Load BAM
  |   <a href="ro41d075.htm">$D075/53365</a>      Calculate blocks free
  |   <a href="ro41d09b.htm">$D09B/53403</a>      ?
  |   <a href="ro41d0af.htm">$D0AF/53423</a>      ?
  |   <a href="ro41d0c3.htm">$D0C3/53443</a>      Read block
  |   <a href="ro41d0c7.htm">$D0C7/53447</a>      Write block
  |   <a href="ro41d0eb.htm">$D0EB/53483</a>      Open channel for reading
  |   <a href="ro41d107.htm">$D107/53511</a>      Open channel for writing
  |   <a href="ro41d125.htm">$D125/53541</a>      Check for file type REL
  |   <a href="ro41d12f.htm">$D12F/53551</a>      Get buffer and channel numbers
  |   <a href="ro41d137.htm">$D137/53559</a>      Get a byte from buffer
  |   <a href="ro41d156.htm">$D156/53590</a>      Get byte and read next block
  |   <a href="ro41d19d.htm">$D19D/53661</a>      Write byte in buffer and block
  |   <a href="ro41d1c6.htm">$D1C6/53702</a>      Increment buffer pointer
  |   <a href="ro41d1d3.htm">$D1D3/53715</a>      Get drive number
  |   <a href="ro41d1df.htm">$D1DF/53727</a>      Find write channel and buffer
  |   <a href="ro41d1e2.htm">$D1E2/53730</a>      Find read channel and buffer
  |   <a href="ro41d227.htm">$D227/53799</a>      Close channel
  |   <a href="ro41d25a.htm">$D25A/53850</a>      Free buffer
  |   <a href="ro41d28e.htm">$D28E/53902</a>      Find buffer
  |   <a href="ro41d2ba.htm">$D2BA/53946</a>      ?
  |   <a href="ro41d2da.htm">$D2DA/53978</a>      ?
  |   <a href="ro41d307.htm">$D307/54023</a>      Close all channels
  |   <a href="ro41d313.htm">$D313/54035</a>      Close all channels of other drives
  |   <a href="ro41d339.htm">$D339/54073</a>      ?
  |   <a href="ro41d37f.htm">$D37F/54143</a>      Find channel and allocate
  |   <a href="ro41d39b.htm">$D39B/54171</a>      Get byte for output
  |   <a href="ro41d44d.htm">$D44D/54349</a>      Read next block
  |   <a href="ro41d460.htm">$D460/54368</a>      Read block
  |   <a href="ro41d464.htm">$D464/54372</a>      Write block
  |   <a href="ro41d475.htm">$D475/54389</a>      Allocate buffer and read block
  |   <a href="ro41d486.htm">$D486/54406</a>      Allocate new block
  |   <a href="ro41d48d.htm">$D48D/54413</a>      Write dir block
  |   <a href="ro41d4c8.htm">$D4C8/54472</a>      Set buffer pointer
  |   <a href="ro41d4da.htm">$D4DA/54490</a>      Close internal channel
  |   <a href="ro41d4e8.htm">$D4E8/54504</a>      Set buffer pointer
  |   <a href="ro41d4f6.htm">$D4F6/54518</a>      Get byte from buffer
  |   <a href="ro41d506.htm">$D506/54534</a>      Check track and sector numbers
  |   <a href="ro41d552.htm">$D552/54610</a>      Get track and sector numbers for current job
  |   <a href="ro41d55f.htm">$D55F/54623</a>      Check for vaild track and sector numbers
  |   <a href="ro41d572.htm">$D572/54642</a>      DOS mismatch error
  |   <a href="ro41d586.htm">$D586/54662</a>      Read block
  |   <a href="ro41d58a.htm">$D58A/54666</a>      Write block
  |   <a href="ro41d599.htm">$D599/54681</a>      Verify execution
  |   <a href="ro41d5c6.htm">$D5C6/54726</a>      Additional attempts for read errors
  |   <a href="ro41d676.htm">$D676/54902</a>      Move head by half a track
  |   <a href="ro41d693.htm">$D693/54931</a>      Move head one track in or out
  |   <a href="ro41d6a6.htm">$D6A6/54950</a>      Attempt command execution multiple times
  |   <a href="ro41d6d0.htm">$D6D0/54992</a>      Transmit param to disk controller
  |   <a href="ro41d6e4.htm">$D6E4/55012</a>      Enter file in dir
  |   <a href="ro41d7b4.htm">$D7B4/55220</a>      OPEN command, secondary addr 15
  |   <a href="ro41d7c7.htm">$D7C7/55239</a>      -Check '*' Last file
  |   <a href="ro41d7f3.htm">$D7F3/55283</a>      -Check '$' Directory
  |   <a href="ro41d815.htm">$D815/55317</a>      -Check '#' Channel
  |   <a href="ro41d8f5.htm">$D8F5/55541</a>      Open a file with overwriting (@)
  |   <a href="ro41d940.htm">$D940/55616</a>      ?
  |   <a href="ro41d9a0.htm">$D9A0/55712</a>      Open file for reading
  |   <a href="ro41d9e3.htm">$D9E3/55779</a>      Open file for writing
  |   <a href="ro41da09.htm">$DA09/55817</a>      Check file type and control mode
  |   <a href="ro41da2a.htm">$DA2A/55850</a>      Preparation for append
  |   <a href="ro41da55.htm">$DA55/55893</a>      Open directory
  |   <a href="ro41dac0.htm">$DAC0/56000</a>      Close routine
  |   <a href="ro41db02.htm">$DB02/56066</a>      Close file
  |   <a href="ro41db62.htm">$DB62/56162</a>      Write last block
  |   <a href="ro41dba5.htm">$DBA5/56229</a>      Directory entry
  |   <a href="ro41dc46.htm">$DC46/56390</a>      Read block, allocate buffer
  |   <a href="ro41dcb6.htm">$DCB6/56502</a>      Reset pointer
  |   <a href="ro41dcda.htm">$DCDA/56538</a>      Construct a new block
  |   <a href="ro41dd8d.htm">$DD8D/56717</a>      Write byte in side-sector block
  |   <a href="ro41dd95.htm">$DD95/56725</a>      Manipulate flags
  |   <a href="ro41dda6.htm">$DDA6/56742</a>      ?
  |   <a href="ro41ddab.htm">$DDAB/56747</a>      Verify command code for writing
  |   <a href="ro41ddb7.htm">$DDB7/56759</a>      ?
  |   <a href="ro41ddf1.htm">$DDF1/56817</a>      Write a block of a REL file
  |   <a href="ro41ddfd.htm">$DDFD/56829</a>      Write bytes for following track
  |   <a href="ro41de0c.htm">$DE0C/56844</a>      Get following track and sector numbers
  |   <a href="ro41de19.htm">$DE19/56857</a>      Following track for last block
  |   <a href="ro41de2b.htm">$DE2B/56875</a>      buffer pointer to zero
  |   <a href="ro41de3b.htm">$DE3B/56891</a>      Get track and sector
  |   <a href="ro41de50.htm">$DE50/56912</a>      Write
  |   <a href="ro41de57.htm">$DE57/56919</a>      Read
  |   <a href="ro41de5e.htm">$DE5E/56926</a>      Write
  |   <a href="ro41de65.htm">$DE65/56933</a>      Read
  |   <a href="ro41de6c.htm">$DE6C/56940</a>      Write
  |   <a href="ro41de73.htm">$DE73/56947</a>      Read
  |   <a href="ro41de95.htm">$DE95/56981</a>      Get following track and sector from buffer
  |   <a href="ro41dea5.htm">$DEA5/56997</a>      Copy buffer contents
  |   <a href="ro41dec1.htm">$DEC1/57025</a>      Erase buffer Y
  |   <a href="ro41ded2.htm">$DED2/57042</a>      Get side-sector number
  |   <a href="ro41dedc.htm">$DEDC/57052</a>      Set buffer pointer to side-sector
  |   <a href="ro41dee9.htm">$DEE9/57065</a>      Buffer pointer for side-sector
  |   <a href="ro41def8.htm">$DEF8/57080</a>      Get side sector and buffer pointer
  |   <a href="ro41df1b.htm">$DF1B/57115</a>      Read side-sector
  |   <a href="ro41df21.htm">$DF21/57121</a>      Write side-sector
  |   <a href="ro41df45.htm">$DF45/57157</a>      Set buffer pointer in side-sector
  |   <a href="ro41df4c.htm">$DF4C/57164</a>      Calculate number of blocks in a REL file
  |   <a href="ro41df66.htm">$DF66/57190</a>      Verify side-sector in buffer
  |   <a href="ro41df93.htm">$DF93/57235</a>      Get buffer number
  |   <a href="ro41df9e.htm">$DF9E/57246</a>      ?
  |   <a href="ro41dfb7.htm">$DFB7/57271</a>      ?
  |   <a href="ro41dfc2.htm">$DFC2/57282</a>      ?
  |   <a href="ro41dfd0.htm">$DFD0/57296</a>      Get next record iin REL file
  |   <a href="ro41e03c.htm">$E03C/57404</a>      Write block and read next block
  |   <a href="ro41e07c.htm">$E07C/57468</a>      Write a byte in a record
  |   <a href="ro41e0ab.htm">$E0AB/57515</a>      Write byte in REL file
  |   <a href="ro41e0f3.htm">$E0F3/57587</a>      Fill record with 0s
  |   <a href="ro41e105.htm">$E105/57605</a>      Write buffer number in table
  |   <a href="ro41e120.htm">$E120/57632</a>      Get byte from REL file
  |   <a href="ro41e1cb.htm">$E1CB/57803</a>      Get last side-sector
  |   <a href="ro41e207.htm">$E207/57863</a>      Perform [P] - Position command
  |   <a href="ro41e2e2.htm">$E2E2/58082</a>      Divide data blocks into records
  |   <a href="ro41e304.htm">$E304/58116</a>      Set pointer to next record
  |   <a href="ro41e31c.htm">$E31C/58140</a>      Expand side-sector
  |   <a href="ro41e44e.htm">$E44E/58446</a>      Write side-sector and allocate new
  |   <a href="ro41e4fc.htm">$E4FC/58620</a>      Table of Error Messages: 00,     Ok
  |   <a href="ro41e500.htm">$E500/58624</a>      Error Message: 20,21,22,23,24,27, Read error
  |   <a href="ro41e50b.htm">$E50B/58635</a>      Error Message: 52, File too large
  |   <a href="ro41e517.htm">$E517/58647</a>      Error Message: 50, Record not present
  |   <a href="ro41e522.htm">$E522/58658</a>      Error Message: 51, Overflow in record
  |   <a href="ro41e52f.htm">$E52F/58671</a>      Error Message: 25,28, Write error
  |   <a href="ro41e533.htm">$E533/58675</a>      Error Message: 26, Write protect on
  |   <a href="ro41e540.htm">$E540/58688</a>      Error Message: 29, Disk id mismatch
  |   <a href="ro41e546.htm">$E546/58694</a>      Error Message: 30,31,32,33,34, Syntax error
  |   <a href="ro41e552.htm">$E552/58706</a>      Error Message: 60, Write file open
  |   <a href="ro41e556.htm">$E556/58710</a>      Error Message: 63, File exists
  |   <a href="ro41e55f.htm">$E55F/58719</a>      Error Message: 64, File type mismatch
  |   <a href="ro41e567.htm">$E567/58727</a>      Error Message: 65, No block
  |   <a href="ro41e570.htm">$E570/58736</a>      Error Message: 66,67, Illegal track or sector
  |   <a href="ro41e589.htm">$E589/58761</a>      Error Message: 61, File not open
  |   <a href="ro41e58d.htm">$E58D/58765</a>      Error Message: 39,62, File not found
  |   <a href="ro41e592.htm">$E592/58770</a>      Error Message: 01, Files scratched
  |   <a href="ro41e59f.htm">$E59F/58783</a>      Error Message: 70, No channel
  |   <a href="ro41e5aa.htm">$E5AA/58794</a>      Error Message: 71, Dir error
  |   <a href="ro41e5af.htm">$E5AF/58799</a>      Error Message: 72, Disk full
  |   <a href="ro41e5b6.htm">$E5B6/58806</a>      Error Message: 73, Cbm dos v2.6 1541
  |   <a href="ro41e5c8.htm">$E5C8/58824</a>      Error Message: 74, Drive not ready
  |   <a href="ro41e5d5.htm">$E5D5/58837</a>      Indexed words: 09 Error
  |   <a href="ro41e5db.htm">$E5DB/58843</a>      Indexed words: 0A Write
  |   <a href="ro41e5e1.htm">$E5E1/58849</a>      Indexed words: 03 File
  |   <a href="ro41e5e6.htm">$E5E6/58854</a>      Indexed words: 04 Open
  |   <a href="ro41e5eb.htm">$E5EB/58859</a>      Indexed words: 05 Mismatch
  |   <a href="ro41e5f4.htm">$E5F4/58868</a>      Indexed words: 06 Not
  |   <a href="ro41e5f8.htm">$E5F8/58872</a>      Indexed words: 07 Found
  |   <a href="ro41e5fe.htm">$E5FE/58878</a>      Indexed words: 08 Disk
  |   <a href="ro41e603.htm">$E603/58883</a>      Indexed words: 0B Record
  |   <a href="ro41e60a.htm">$E60A/58890</a>      Prepare error number and message
  |   <a href="ro41e645.htm">$E645/58949</a>      Print error message into error buffer
  |   <a href="ro41e680.htm">$E680/59008</a>      TALK
  |   <a href="ro41e688.htm">$E688/59016</a>      LISTEN
  |   <a href="ro41e69b.htm">$E69B/59035</a>      Convert BIN to 2-Ascii (error message buffer)
  |   <a href="ro41e6ab.htm">$E6AB/59051</a>      Convert BCD to 2-Ascii (error message buffer)
  |   <a href="ro41e6bc.htm">$E6BC/59068</a>      Write OK in buffer
  |   <a href="ro41e6c1.htm">$E6C1/59073</a>      Print error on track 00,00 to error buffer
  |   <a href="ro41e6c7.htm">$E6C7/59079</a>      Print error on current track to error buffer
  |   <a href="ro41e706.htm">$E706/59142</a>      Write error message string to buffer
  |   <a href="ro41e754.htm">$E754/59220</a>      Get character and in buffer
  |   <a href="ro41e767.htm">$E767/59239</a>      Get a char of the error message
  |   <a href="ro41e775.htm">$E775/59253</a>      Increment pointer
  |   <a href="ro41e77f.htm">$E77F/59263</a>      Dummy subroutine
  |   <a href="ro41e780.htm">$E780/59264</a>      Check for auto start - removed
  |   <a href="ro41e7a3.htm">$E7A3/59299</a>      Perform [&amp;] - USR file execute command
  |   <a href="ro41e84b.htm">$E84B/59467</a>      Generate checksum
  |   <a href="ro41e853.htm">$E853/59475</a>      IRQ routine for serial bus
  |   <a href="ro41e85b.htm">$E85B/59483</a>      Service the serial bus
  |   <a href="ro41e909.htm">$E909/59657</a>      Send data
  |   <a href="ro41e99c.htm">$E99C/59804</a>      DATA OUT lo
  |   <a href="ro41e9a5.htm">$E9A5/59813</a>      DATA OUT hi
  |   <a href="ro41e9ae.htm">$E9AE/59822</a>      CLOCK OUT hi
  |   <a href="ro41e9b7.htm">$E9B7/59831</a>      CLOCK OUT lo
  |   <a href="ro41e9c0.htm">$E9C0/59840</a>      Read IEEE port
  |   <a href="ro41e9c9.htm">$E9C9/59849</a>      Get data byte from bus
  |   <a href="ro41e9f2.htm">$E9F2/59890</a>      Accept byte with EOI
  |   <a href="ro41ea2e.htm">$EA2E/59950</a>      Accept data from serial bus
  |   <a href="ro41ea59.htm">$EA59/59993</a>      Test for ATN
  |   <a href="ro41ea6e.htm">$EA6E/60014</a>      Flash LED for hardware defects, self-test
  |   <a href="ro41eaa0.htm">$EAA0/60064</a>      Power-up RESET routine
  |   <a href="ro41ebff.htm">$EBFF/60415</a>      Wait loop
  |   <a href="ro41ec9e.htm">$EC9E/60574</a>      Load dir
  |   <a href="ro41ed23.htm">$ED23/60707</a>      ?
  |   <a href="ro41ed59.htm">$ED59/60761</a>      Transmit dir line
  |   <a href="ro41ed67.htm">$ED67/60775</a>      Get byte from buffer
  |   <a href="ro41ed84.htm">$ED84/60804</a>      Perform [V] - Validate command
  |   <a href="ro41edb3.htm">$EDB3/60851</a>      ?
  |   <a href="ro41ede5.htm">$EDE5/60901</a>      Allocate file blocks in BAM
  |   <a href="ro41ee0d.htm">$EE0D/60941</a>      Perform [N] - New (Format) command
  |   <a href="ro41eeb7.htm">$EEB7/61111</a>      Create BAM
  |   <a href="ro41eef4.htm">$EEF4/61172</a>      Write BAM if needed
  |   <a href="ro41ef3a.htm">$EF3A/61242</a>      Set buffer pointer for BAM
  |   <a href="ro41ef4d.htm">$EF4D/61261</a>      Get number of free blocks for dir
  |   <a href="ro41ef5c.htm">$EF5C/61276</a>      Mark block as free
  |   <a href="ro41ef88.htm">$EF88/61320</a>      Set flag for BAM changed
  |   <a href="ro41ef90.htm">$EF90/61328</a>      Mark block as allocated
  |   <a href="ro41efcf.htm">$EFCF/61391</a>      Erase bit for sector in BAM entry
  |   <a href="ro41efe9.htm">$EFE9/61417</a>      Powers of 2
  |   <a href="ro41eff1.htm">$EFF1/61425</a>      Write BAM after change
  |   <a href="ro41f005.htm">$F005/61445</a>      Erase BAM buffer
  |   <a href="ro41f011.htm">$F011/61457</a>      ?
  |   <a href="ro41f05b.htm">$F05B/61531</a>      ?
  |   <a href="ro41f0d1.htm">$F0D1/61649</a>      ?
  |   <a href="ro41f0df.htm">$F0DF/61663</a>      ?
  |   <a href="ro41f10f.htm">$F10F/61711</a>      Get buffer number for BAM
  |   <a href="ro41f119.htm">$F119/61721</a>      Buffer number for BAM
  |   <a href="ro41f11e.htm">$F11E/61726</a>      Find and allocate free block
  |   <a href="ro41f1a9.htm">$F1A9/61865</a>      Find free sector and allocate
  |   <a href="ro41f1fa.htm">$F1FA/61946</a>      Find free sectors in current track
  |   <a href="ro41f220.htm">$F220/61984</a>      Verify number of free blocks in BAM
  |   <a href="ro41f24b.htm">$F24B/62027</a>      Establish number of sectors per track
  |   <a href="ro41f258.htm">$F258/62040</a>      Dummy subroutine
  |
  | Disk Controller Routines:
  |
  |   <a href="ro41f259.htm">$F259/62041</a>      Initialise disk controller
  |   <a href="ro41f2b0.htm">$F2B0/62128</a>      IRQ routine for disk controller
  |   <a href="ro41f2f9.htm">$F2F9/62201</a>      Head transport
  |   <a href="ro41f36e.htm">$F36E/62318</a>      Execute program in buffer
  |   <a href="ro41f37c.htm">$F37C/62332</a>      Bump, find track 1 (head at stop)
  |   <a href="ro41f393.htm">$F393/62355</a>      Initialise pointer in buffer
  |   <a href="ro41f3b1.htm">$F3B1/62385</a>      Read block header, verify ID
  |   <a href="ro41f410.htm">$F410/62480</a>      Preserve block header
  |   <a href="ro41f418.htm">$F418/62488</a>      Work Return value 01 (OK) into queue
  |   <a href="ro41f41b.htm">$F41B/62491</a>      Work Return value 0B (READ ERROR) into queue
  |   <a href="ro41f41e.htm">$F41E/62494</a>      Work Return value 09 (READ ERROR) into queue
  |   <a href="ro41f423.htm">$F423/62499</a>      Job optimisation
  |   <a href="ro41f4ca.htm">$F4CA/62666</a>      Test command code further
  |   <a href="ro41f4d1.htm">$F4D1/62673</a>      Read sector
  |   <a href="ro41f50a.htm">$F50A/62730</a>      Find start of data block
  |   <a href="ro41f510.htm">$F510/62736</a>      Read block header
  |   <a href="ro41f556.htm">$F556/62806</a>      Wait for SYNC
  |   <a href="ro41f56e.htm">$F56E/62830</a>      Test command code further
  |   <a href="ro41f575.htm">$F575/62837</a>      Write data block to disk
  |   <a href="ro41f5e9.htm">$F5E9/62953</a>      Calculate parity for data buffer
  |   <a href="ro41f5f2.htm">$F5F2/62962</a>      Convert buffer of GCR data into binary
  |   <a href="ro41f691.htm">$F691/63121</a>      Test command code further
  |   <a href="ro41f698.htm">$F698/63128</a>      Compare written data with data on disk
  |   <a href="ro41f6ca.htm">$F6CA/63178</a>      Command code for find sector
  |   <a href="ro41f6d0.htm">$F6D0/63184</a>      Convert 4 binary bytes to 5 GCR bytes
  |   <a href="ro41f77f.htm">$F77F/63359</a>      GCR (5-bit) nybble table
  |   <a href="ro41f78f.htm">$F78F/63375</a>      Convert 260 bytes to 325 bytes group code
  |   <a href="ro41f7e6.htm">$F7E6/63462</a>      Convert 5 GCR bytes to 4 binary bytes
  |   <a href="ro41f8a0.htm">$F8A0/63648</a>      Conversion table GCR to binary - high nybble
  |   <a href="ro41f8c0.htm">$F8C0/63680</a>      Conversion table GCR to binary - low nybble
  |   <a href="ro41f8e0.htm">$F8E0/63712</a>      Decode 69 GCR bytes
  |   <a href="ro41f934.htm">$F934/63796</a>      Convert block header to GCR code
  |   <a href="ro41f969.htm">$F969/63849</a>      Error entry disk controller
  |   <a href="ro41f97e.htm">$F97E/63870</a>      Turn drive motor on
  |   <a href="ro41f98f.htm">$F98F/63887</a>      Turn drive motor off
  |   <a href="ro41f99c.htm">$F99C/63900</a>      Job loop disk controller
  |   <a href="ro41f9cb.htm">$F9CB/63947</a>      ?
  |   <a href="ro41f9d9.htm">$F9D9/63961</a>      ?
  |   <a href="ro41fa05.htm">$FA05/64005</a>      Move head to next track
  |   <a href="ro41fa1c.htm">$FA1C/64028</a>      Calculate number of head steps
  |   <a href="ro41fa3b.htm">$FA3B/64059</a>      Move stepper motor short distance
  |   <a href="ro41fa4e.htm">$FA4E/64078</a>      Load head
  |   <a href="ro41fa63.htm">$FA63/64099</a>      ?
  |   <a href="ro41fa7b.htm">$FA7B/64123</a>      Prepare fast head movement
  |   <a href="ro41fa97.htm">$FA97/64151</a>      Fast head movement
  |   <a href="ro41faa5.htm">$FAA5/64165</a>      Prepare slow head movement
  |   <a href="ro41fac7.htm">$FAC7/64199</a>      Formatting
  |   <a href="ro41fda3.htm">$FDA3/64931</a>      Write SYNC 10240 times, erase track
  |   <a href="ro41fdc3.htm">$FDC3/64963</a>      Read/write ($621/$622) times
  |   <a href="ro41fdd3.htm">$FDD3/64979</a>      Attempt counter for formatting
  |   <a href="ro41fde5.htm">$FDE5/64997</a>      ?
  |   <a href="ro41fdf5.htm">$FDF5/65013</a>      Copy data from overflow buffer
  |   <a href="ro41fe00.htm">$FE00/65024</a>      Switch to reading
  |   <a href="ro41fe0e.htm">$FE0E/65038</a>      Write $55 10240 times
  |   <a href="ro41fe30.htm">$FE30/65072</a>      Convert header in buffer 0 to GCR code
  |   <a href="ro41fe67.htm">$FE67/65127</a>      Interrupt routine
  |   <a href="ro41fe85.htm">$FE85/65157</a>      Constant: Directory track
  |   <a href="ro41fe86.htm">$FE86/65158</a>      Constant: Start of BAM
  |   <a href="ro41fe87.htm">$FE87/65159</a>      Constant: Length of BAM per track
  |   <a href="ro41fe88.htm">$FE88/65160</a>      Constant: End of BAM
  |   <a href="ro41fe89.htm">$FE89/65161</a>      Table of command words
  |   <a href="ro41fe95.htm">$FE95/65173</a>      Low  byte of command addresses
  |   <a href="ro41fea1.htm">$FEA1/65185</a>      High byte of command addresses
  |   <a href="ro41fead.htm">$FEAD/65197</a>      Bytes for syntax check
  |   <a href="ro41feb2.htm">$FEB2/65202</a>      File control methods &quot;RWAM&quot;
  |   <a href="ro41feb6.htm">$FEB6/65206</a>      File types &quot;DSPUL&quot;
  |   <a href="ro41febb.htm">$FEBB/65211</a>      Names of file types: 1st letter &quot;DSPUR&quot;
  |   <a href="ro41fec0.htm">$FEC0/65216</a>      Names of file types: 2nd letter &quot;EERSE&quot;
  |   <a href="ro41fec5.htm">$FEC5/65221</a>      Names of file types: 3rd letter &quot;LQGRL&quot;
  |   <a href="ro41feca.htm">$FECA/65226</a>      Error LED bit value
  |   <a href="ro41fecd.htm">$FECD/65229</a>      Masks for bit command
  |   <a href="ro41fed1.htm">$FED1/65233</a>      Number of sectors per track
  |   <a href="ro41fed5.htm">$FED5/65237</a>      'A' marker for 1541 format
  |   <a href="ro41fed6.htm">$FED6/65238</a>      4 track ranges
  |   <a href="ro41fed7.htm">$FED7/65239</a>      Number of tracks
  |   <a href="ro41fed8.htm">$FED8/65240</a>      Tracks on which sector numbers change
  |   <a href="ro41fedb.htm">$FEDB/65243</a>      Control bytes for head postion
  |   <a href="ro41fee0.htm">$FEE0/65248</a>      Buffer address high bytes
  |   <a href="ro41fee6.htm">$FEE6/65254</a>      ROM checksum
  |   <a href="ro41fee7.htm">$FEE7/65255</a>      From UI command $EB22, to reset (Without RAM/ROM test)
  |   <a href="ro41feea.htm">$FEEA/65258</a>      Patch for diagnostic routine from $EA7A
  |   <a href="ro41fef3.htm">$FEF3/65267</a>      Delay loop for serial bus in 1541 mode, from $E97D
  |   <a href="ro41fefb.htm">$FEFB/65275</a>      Patch for data output to serial bus, from $E980
  |   <a href="ro41ff01.htm">$FF01/65281</a>      U9 vector, switch 1540/1541
  |   <a href="ro41ff10.htm">$FF10/65296</a>      Patch for reset routine, from $EAA4
  |   <a href="ro41ff20.htm">$FF20/65312</a>      Patch for listen to serial bus, from $E9DC
  |   <a href="ro41ff2f.htm">$FF2F/65327</a>      Unused
  |   <a href="ro41ffe6.htm">$FFE6/65510</a>      Format  [C8C6]
  |   <a href="ro41ffe8.htm">$FFE8/65512</a>      Turn motor off [F98F]
  |   <a href="ro41ffea.htm">$FFEA/65514</a>      USER vectors: UA, U1  [CD5F]
  |   <a href="ro41ffec.htm">$FFEC/65516</a>      USER vectors: UB, U2  [CD97]
  |   <a href="ro41ffee.htm">$FFEE/65518</a>      USER vectors: UC, U3  [0500]
  |   <a href="ro41fff0.htm">$FFF0/65520</a>      USER vectors: UD, U4  [0503]
  |   <a href="ro41fff2.htm">$FFF2/65522</a>      USER vectors: UE, U5  [0506]
  |   <a href="ro41fff4.htm">$FFF4/65524</a>      USER vectors: UF, U6  [0509]
  |   <a href="ro41fff6.htm">$FFF6/65526</a>      USER vectors: UG, U7  [050C]
  |   <a href="ro41fff8.htm">$FFF8/65528</a>      USER vectors: UH, U8  [050F]
  |   <a href="ro41fffa.htm">$FFFA/65530</a>      USER vectors: UI, U9  [FF01]
  |   <a href="ro41fffc.htm">$FFFC/65532</a>      Hardware vectors: RESET [EAA0]
  |   <a href="ro41fffe.htm">$FFFE/65534</a>      Hardware vectors: IRQ   [FE67]
  |
  +------------------------------------------------------------------------

</pre></td></tr></table></center></body></html>
